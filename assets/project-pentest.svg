<svg width="600" height="400" viewBox="0 0 600 400" fill="none" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="pentestBg" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#1E293B;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#0F172A;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="screenGlow" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#10B981;stop-opacity:0.8" />
      <stop offset="100%" style="stop-color:#059669;stop-opacity:0.6" />
    </linearGradient>
    <linearGradient id="aiGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#8B5CF6;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#A855F7;stop-opacity:1" />
    </linearGradient>
    <filter id="terminalGlow">
      <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
      <feMerge> 
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
    <pattern id="codePattern" x="0" y="0" width="20" height="8" patternUnits="userSpaceOnUse">
      <rect width="20" height="8" fill="none"/>
      <text x="2" y="6" font-family="monospace" font-size="6" fill="#10B981" opacity="0.7">01</text>
    </pattern>
  </defs>
  
  <!-- Background -->
  <rect width="600" height="400" fill="url(#pentestBg)"/>
  
  <!-- Grid Pattern -->
  <defs>
    <pattern id="grid" width="40" height="40" patternUnits="userSpaceOnUse">
      <path d="M 40 0 L 0 0 0 40" fill="none" stroke="#334155" stroke-width="0.5" opacity="0.3"/>
    </pattern>
  </defs>
  <rect width="600" height="400" fill="url(#grid)"/>
  
  <!-- Main Terminal/Computer -->
  <g transform="translate(150, 80)">
    <!-- Computer Body -->
    <rect x="0" y="80" width="300" height="200" rx="15" fill="#1F2937" stroke="#374151" stroke-width="2"/>
    
    <!-- Screen -->
    <rect x="20" y="100" width="260" height="160" rx="8" fill="#000000" stroke="#10B981" stroke-width="1"/>
    
    <!-- Screen Glow -->
    <rect x="22" y="102" width="256" height="156" rx="6" fill="url(#screenGlow)" opacity="0.1"/>
    
    <!-- Terminal Content -->
    <g transform="translate(30, 110)">
      <!-- Terminal Header -->
      <rect x="0" y="0" width="240" height="20" fill="#1F2937"/>
      <circle cx="10" cy="10" r="3" fill="#EF4444"/>
      <circle cx="22" cy="10" r="3" fill="#F59E0B"/>
      <circle cx="34" cy="10" r="3" fill="#10B981"/>
      <text x="50" y="14" font-family="monospace" font-size="10" fill="#9CA3AF">AI Penetration Testing Tool</text>
      
      <!-- Terminal Lines -->
      <g font-family="monospace" font-size="8" fill="#10B981">
        <text x="5" y="35" opacity="0.8">$ python pentest_ai.py --target example.com</text>
        <text x="5" y="48" opacity="0.7">[AI] Initializing neural network scanner...</text>
        <text x="5" y="61" opacity="0.9">[AI] Vulnerability patterns detected: SQLi, XSS</text>
        <text x="5" y="74" opacity="0.6">[EXPLOIT] Generating custom payloads...</text>
        <text x="5" y="87" opacity="0.8">[SUCCESS] Remote code execution achieved</text>
        <text x="5" y="100" opacity="0.5">[AI] Risk score: 9.2/10 - Critical</text>
        <text x="5" y="113" opacity="0.7">[REPORT] Generating comprehensive report...</text>
        <text x="5" y="126">
          <tspan fill="#F59E0B">root@kali</tspan>
          <tspan fill="#9CA3AF">:</tspan>
          <tspan fill="#3B82F6">~</tspan>
          <tspan fill="#9CA3AF">$ </tspan>
          <tspan fill="#10B981" opacity="0.8">â–ˆ</tspan>
        </text>
      </g>
    </g>
    
    <!-- Keyboard -->
    <rect x="40" y="290" width="220" height="80" rx="5" fill="#374151" stroke="#4B5563" stroke-width="1"/>
    <g fill="#6B7280">
      <!-- Key rows -->
      <rect x="50" y="300" width="200" height="8" rx="2" opacity="0.7"/>
      <rect x="50" y="315" width="180" height="8" rx="2" opacity="0.7"/>
      <rect x="50" y="330" width="160" height="8" rx="2" opacity="0.7"/>
      <rect x="50" y="345" width="140" height="8" rx="2" opacity="0.7"/>
    </g>
  </g>
  
  <!-- AI Brain Visualization -->
  <g transform="translate(480, 50)">
    <!-- Neural Network Nodes -->
    <circle cx="0" cy="0" r="8" fill="url(#aiGradient)" filter="url(#terminalGlow)"/>
    <circle cx="-20" cy="-30" r="6" fill="url(#aiGradient)" opacity="0.8"/>
    <circle cx="20" cy="-30" r="6" fill="url(#aiGradient)" opacity="0.8"/>
    <circle cx="-30" cy="0" r="6" fill="url(#aiGradient)" opacity="0.7"/>
    <circle cx="30" cy="0" r="6" fill="url(#aiGradient)" opacity="0.7"/>
    <circle cx="-20" cy="30" r="6" fill="url(#aiGradient)" opacity="0.8"/>
    <circle cx="20" cy="30" r="6" fill="url(#aiGradient)" opacity="0.8"/>
    
    <!-- Neural Connections -->
    <g stroke="url(#aiGradient)" stroke-width="1" opacity="0.6">
      <line x1="0" y1="0" x2="-20" y2="-30"/>
      <line x1="0" y1="0" x2="20" y2="-30"/>
      <line x1="0" y1="0" x2="-30" y2="0"/>
      <line x1="0" y1="0" x2="30" y2="0"/>
      <line x1="0" y1="0" x2="-20" y2="30"/>
      <line x1="0" y1="0" x2="20" y2="30"/>
    </g>
    
    <!-- AI Label -->
    <text x="-15" y="50" font-family="monospace" font-size="12" fill="#A855F7" font-weight="bold">AI CORE</text>
    
    <!-- Pulsing Animation -->
    <circle cx="0" cy="0" r="15" fill="none" stroke="url(#aiGradient)" stroke-width="1" opacity="0.3">
      <animate attributeName="r" values="15;25;15" dur="2s" repeatCount="indefinite"/>
      <animate attributeName="opacity" values="0.3;0;0.3" dur="2s" repeatCount="indefinite"/>
    </circle>
  </g>
  
  <!-- Vulnerability Scanner Visualization -->
  <g transform="translate(50, 200)">
    <!-- Scanner Beam -->
    <rect x="0" y="0" width="80" height="4" fill="#10B981" opacity="0.6">
      <animate attributeName="width" values="0;80;0" dur="3s" repeatCount="indefinite"/>
    </g>
    
    <!-- Vulnerability Icons -->
    <g transform="translate(10, 20)">
      <!-- SQL Injection -->
      <rect x="0" y="0" width="15" height="10" rx="2" fill="#EF4444" opacity="0.7"/>
      <text x="2" y="8" font-family="monospace" font-size="6" fill="white">SQL</text>
      
      <!-- XSS -->
      <rect x="20" y="0" width="15" height="10" rx="2" fill="#F59E0B" opacity="0.7"/>
      <text x="22" y="8" font-family="monospace" font-size="6" fill="white">XSS</text>
      
      <!-- RCE -->
      <rect x="40" y="0" width="15" height="10" rx="2" fill="#DC2626" opacity="0.7"/>
      <text x="42" y="8" font-family="monospace" font-size="6" fill="white">RCE</text>
    </g>
    
    <!-- Scanning Text -->
    <text x="0" y="40" font-family="monospace" font-size="8" fill="#10B981">Scanning...</text>
  </g>
  
  <!-- Network Topology -->
  <g transform="translate(450, 200)" opacity="0.7">
    <!-- Server -->
    <rect x="0" y="0" width="20" height="15" rx="2" fill="#6B7280"/>
    <rect x="2" y="2" width="16" height="2" fill="#10B981"/>
    <rect x="2" y="6" width="16" height="2" fill="#10B981"/>
    <rect x="2" y="10" width="16" height="2" fill="#EF4444"/>
    
    <!-- Network Lines -->
    <line x1="10" y1="15" x2="10" y2="30" stroke="#4B5563" stroke-width="2"/>
    <line x1="-20" y1="30" x2="40" y2="30" stroke="#4B5563" stroke-width="2"/>
    
    <!-- Client Devices -->
    <rect x="-25" y="35" width="12" height="8" rx="1" fill="#6B7280"/>
    <rect x="35" y="35" width="12" height="8" rx="1" fill="#6B7280"/>
    
    <!-- Attack Vectors -->
    <path d="M-10,25 Q0,20 10,25" stroke="#EF4444" stroke-width="1" fill="none" stroke-dasharray="2,2">
      <animate attributeName="stroke-dashoffset" values="0;4" dur="1s" repeatCount="indefinite"/>
    </path>
  </g>
  
  <!-- Security Metrics -->
  <g transform="translate(20, 50)">
    <rect x="0" y="0" width="100" height="60" rx="5" fill="#1F2937" stroke="#374151" stroke-width="1" opacity="0.8"/>
    <text x="10" y="15" font-family="monospace" font-size="10" fill="#10B981" font-weight="bold">METRICS</text>
    
    <!-- Progress Bars -->
    <g transform="translate(10, 20)">
      <text x="0" y="10" font-family="monospace" font-size="7" fill="#9CA3AF">Vulns: 15</text>
      <rect x="0" y="12" width="80" height="3" fill="#374151"/>
      <rect x="0" y="12" width="60" height="3" fill="#EF4444"/>
      
      <text x="0" y="25" font-family="monospace" font-size="7" fill="#9CA3AF">Risk: High</text>
      <rect x="0" y="27" width="80" height="3" fill="#374151"/>
      <rect x="0" y="27" width="70" height="3" fill="#F59E0B"/>
    </g>
  </g>
  
  <!-- Code Stream Animation -->
  <g transform="translate(0, 0)" opacity="0.2">
    <text x="10" y="20" font-family="monospace" font-size="6" fill="#10B981">
      import tensorflow as tf
      <animate attributeName="y" values="20;380;20" dur="15s" repeatCount="indefinite"/>
    </text>
    <text x="10" y="60" font-family="monospace" font-size="6" fill="#3B82F6">
      neural_network = tf.keras.Sequential()
      <animate attributeName="y" values="60;420;60" dur="18s" repeatCount="indefinite"/>
    </text>
    <text x="10" y="100" font-family="monospace" font-size="6" fill="#8B5CF6">
      pentest_model.predict(payload)
      <animate attributeName="y" values="100;460;100" dur="12s" repeatCount="indefinite"/>
    </text>
  </g>
  
  <!-- Floating Security Icons -->
  <g opacity="0.4">
    <!-- Shield -->
    <g transform="translate(520, 300)">
      <path d="M0,-10 L6,-6 L6,6 L0,10 L-6,6 L-6,-6 Z" fill="#10B981"/>
      <animate attributeName="transform" values="translate(520,300);translate(520,280);translate(520,300)" dur="4s" repeatCount="indefinite"/>
    </g>
    
    <!-- Lock -->
    <g transform="translate(100, 350)">
      <rect x="-4" y="-2" width="8" height="6" rx="1" fill="#F59E0B"/>
      <path d="M-2,-6 C-2,-8 0,-8 2,-6 L2,-2" stroke="#F59E0B" stroke-width="1" fill="none"/>
      <animate attributeName="transform" values="translate(100,350);translate(100,330);translate(100,350)" dur="3s" repeatCount="indefinite"/>
    </g>
    
    <!-- Bug -->
    <g transform="translate(300, 30)">
      <ellipse cx="0" cy="0" rx="4" ry="6" fill="#EF4444"/>
      <circle cx="0" cy="-2" r="1" fill="#FFF"/>
      <circle cx="0" cy="2" r="1" fill="#FFF"/>
      <animate attributeName="transform" values="translate(300,30);translate(300,10);translate(300,30)" dur="5s" repeatCount="indefinite"/>
    </g>
  </g>
</svg>
